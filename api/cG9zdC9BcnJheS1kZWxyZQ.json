{"title":"总结：数组去重的几种方法","date":"2018-09-11T06:02:30.000Z","excerpt":"","slug":"Array-delre","updated":"2018-09-11T06:19:42.334Z","content":"<ul>\n<li><p>方法一：遍历数组、建立新数组<br><br>利用indexOf或者includes判断是否存在于新数组中，<br><br>不存在则push到新数组，最后返回新数组</p>\n<pre><code>function delre(arr) {\n  let newArr = [];\n  for (let i = 0; i &lt; arr.length; i++) {\n// if (newArr.indexOf(arr[i]) === -1) {\n    if(!newArr.includes(arr[i])) {\n      newArr.push(arr[i]);\n    }\n  }\n  return newArr;\n}\nconsole.log(delre([1, 2, 3, 4, 3, 2, 5, 6, 7]));\n</code></pre></li>\n</ul>\n<p><br></p>\n<ul>\n<li><p>方法二： 利用indexOf检测元素在数组中第一次出现的位置<br><br>indexOf()方法可返回某个指定的字符串值在字符串中首次出现的位置<br><br>判断是否和当前元素的位置相等，<br><br>如果不等则说明该元素是重复元素<br></p>\n<pre><code>function delre(arr) {\n  let newArr = [];\n  newArr = arr.filter((item, index) =&gt; {\n    return arr.indexOf(item) === index; \n  });\n  return newArr;\n}\nconsole.log(delre([1,2,3,4,5,6,5,6,5,67,3,2,45]))\n</code></pre></li>\n<li><p>方法三：相邻元素去重sort()<br><br>这种方法首先调用了数组的排序方法sort()<br><br>然后根据排序后的结果进行遍历及相邻元素比对<br><br>如果相等则跳过改元素，直到遍历结束<br></p>\n<pre><code>function delre(arr) {\n  arr = arr.sort();\n  if(!Array.isArray(arr)) {\n    console.log(&apos;type error!&apos;);\n    return;\n  }\n  let newArr = [];\n  for(let i = 0; i &lt; arr.length; i++) {\n    if(arr[i] !== arr[i+1]) {\n      newArr.push(arr[i]);\n    }\n  }\n  return newArr;\n}\nconsole.log(delre([1,3,2,5,4,9,8,6,7,5,4,3,2,4]))\n</code></pre><p><br></p>\n</li>\n<li><p>方法四：利用对象属性去重<br><br>创建空对象，遍历数组，将数组中的值设为对象的属性<br><br>并给该属性赋初始值1，每出现一次，对应的属性值增加1<br><br>这样，属性值对应的就是该元素出现的次数了<br></p>\n<pre><code>function delre(arr) {\n  if(!Array.isArray(arr)) {\n    console.log(&apos;type error&apos;);\n    return;\n  }\n  let newArr = [];\n  let obj = {};\n  for(let i = 0; i &lt; arr.length; i++) {\n    if(!obj[arr[i]]) {\n      newArr.push(arr[i]);\n      obj[arr[i]] = 1;\n    } else {\n      obj[arr[i]]++;\n    }\n  }\n  console.log(obj);\n  return newArr;\n}\nconsole.log(delre([1,2,4,5,3,6,4,5,64,2,4,5]))\n</code></pre><p><br></p>\n</li>\n<li><p>方法五：Set<br><br>ES6提供了数据类型Set。类似于数组，但是没有重复值<br><br>Set可以接受一个数组（或者类数组对象）作为参数，用来初始化<br><br>Array.from()方法可以将Set结构转换为数组<br></p>\n<pre><code>function delre(arr) {\n  if (!Array.isArray(arr)) {\n    console.log(&apos;type error!&apos;)\n    return\n  }\n  // return [...new Set(arr)];\n  return Array.from(new Set(arr));\n}\nconsole.log(delre([1, 2, 3, 2, 4, 3, 2, 4, 5, 4, 6, 7]))\n</code></pre></li>\n</ul>\n","next":{"title":"总结：JS基础面试知识--原型、原型链、构造函数","slug":"js-interview-2"},"link":"/2018/09/11"}