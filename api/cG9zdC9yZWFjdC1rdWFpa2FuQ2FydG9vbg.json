{"title":"实战：React全家桶仿PC端《快看漫画》(部分)","date":"2018-08-30T09:50:18.000Z","excerpt":"","slug":"react-kuaikanCartoon","updated":"2018-08-30T09:51:40.289Z","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><h5 id=\"nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-最近在学习React，为了在学习的同时巩固一下所学内容，决定仿一个《快看漫画》的网页；由于学习进度及时间问题，我只实现了网站的部分功能：登录与退出、对应漫画关注-取关、关键词搜索等。\"><a href=\"#nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-最近在学习React，为了在学习的同时巩固一下所学内容，决定仿一个《快看漫画》的网页；由于学习进度及时间问题，我只实现了网站的部分功能：登录与退出、对应漫画关注-取关、关键词搜索等。\" class=\"headerlink\" title=\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近在学习React，为了在学习的同时巩固一下所学内容，决定仿一个《快看漫画》的网页；由于学习进度及时间问题，我只实现了网站的部分功能：登录与退出、对应漫画关注/取关、关键词搜索等。\"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近在学习React，为了在学习的同时巩固一下所学内容，决定仿一个《快看漫画》的网页；由于学习进度及时间问题，我只实现了网站的部分功能：登录与退出、对应漫画关注/取关、关键词搜索等。</h5><h5 id=\"nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-项目写了一个星期，写的时候觉着自己写了好多呀；写完之后就发现怎么才这么点。。。但是就这么一点点我也厚着脸皮写文章了，希望能给新手起到参考作用；同时虚心向各路大佬请教。\"><a href=\"#nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-项目写了一个星期，写的时候觉着自己写了好多呀；写完之后就发现怎么才这么点。。。但是就这么一点点我也厚着脸皮写文章了，希望能给新手起到参考作用；同时虚心向各路大佬请教。\" class=\"headerlink\" title=\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;项目写了一个星期，写的时候觉着自己写了好多呀；写完之后就发现怎么才这么点。。。但是就这么一点点我也厚着脸皮写文章了，希望能给新手起到参考作用；同时虚心向各路大佬请教。\"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;项目写了一个星期，写的时候觉着自己写了好多呀；写完之后就发现怎么才这么点。。。但是就这么一点点我也厚着脸皮写文章了，希望能给新手起到参考作用；同时虚心向各路大佬请教。</h5><h5 id=\"nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-——by不会写文章的前端小白\"><a href=\"#nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-——by不会写文章的前端小白\" class=\"headerlink\" title=\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——by不会写文章的前端小白\"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——by不会写文章的前端小白</h5><h2 id=\"详细介绍\"><a href=\"#详细介绍\" class=\"headerlink\" title=\"详细介绍\"></a>详细介绍</h2><p><br></p>\n<h3 id=\"1-nbsp-nbsp-技术栈与组件库\"><a href=\"#1-nbsp-nbsp-技术栈与组件库\" class=\"headerlink\" title=\"1.&nbsp;&nbsp;技术栈与组件库\"></a>1.&nbsp;&nbsp;技术栈与组件库</h3><ul>\n<li>react-reudx: &nbsp;解决组件间通信</li>\n<li>redux-thunk: &nbsp;异步操作中间件</li>\n<li>reac-router-dom: &nbsp;SPA单页面开发</li>\n<li>axios: &nbsp;异步获取数据</li>\n<li>react-transition-group: &nbsp;实现简单动画样式</li>\n<li>immutable.js: &nbsp;让数据类型不可变</li>\n<li>styled-components: &nbsp;样式编写库</li>\n</ul>\n<p><br></p>\n<h3 id=\"2-nbsp-nbsp-目录列表\"><a href=\"#2-nbsp-nbsp-目录列表\" class=\"headerlink\" title=\"2.&nbsp;&nbsp;目录列表\"></a>2.&nbsp;&nbsp;目录列表</h3><pre><code>├── ...                                     \n├── ...                                     \n├── ...                                         \n├── public                                  \n│   ├── api                         // 模拟数据存放目录\n├── src                             // 开发目录\n│   ├── common                      // 公共组件\n│   ├── pages                       // 页面\n│   │   ├── detail                  // 详情页   \n│   │   ├── home                    // 首页\n│   │   ├── login                   // 登录页\n│   ├── statics                     // 静态图片资源  \n│   ├── store                       // 总存储仓库目录            \n├──  App.js         \n├──  index.js\n├──  style.js                       // 样式文件\n├── ...\n├── ...\n├── ...\n</code></pre><p><br></p>\n<h3 id=\"3-nbsp-nbsp-功能介绍\"><a href=\"#3-nbsp-nbsp-功能介绍\" class=\"headerlink\" title=\"3.&nbsp;&nbsp;功能介绍\"></a>3.&nbsp;&nbsp;功能介绍</h3><h4 id=\"‘登录-退出’-功能\"><a href=\"#‘登录-退出’-功能\" class=\"headerlink\" title=\"‘登录/退出’ 功能:\"></a>‘登录/退出’ 功能:</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过设置登录状态(true or false)来判断是否登录，同时通过ref属性取到用户名，传给User组件将用户名渲染到页面。</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/8/30/1658963641b2aefa?w=600&amp;h=257&amp;f=gif&amp;s=1284782\" alt=\"\"><br><br></p>\n<h4 id=\"‘关注-取消关注’-功能：\"><a href=\"#‘关注-取消关注’-功能：\" class=\"headerlink\" title=\"‘关注/取消关注’ 功能：\"></a>‘关注/取消关注’ 功能：</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;点击关注时获取相应漫画id并集合成数组；点击取消关注时获取当前项漫画id，通过indexOf找到对应id后dispatch出漫画信息，再将对应漫画项移除。</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/8/30/165897509b44d317?w=600&amp;h=257&amp;f=gif&amp;s=2237129\" alt=\"\"><br>部分代码：<br><br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;对应漫画’关注/取消关注’按钮显示：</p>\n<pre><code>{\n    //this.followItem获取当前已关注列表，this.list.id为当前项漫画id\n    isLogin &amp;&amp; this.checkFollowed(this.followItem, this.list.id) ? \n    &lt;Follow \n        className=&quot;btn other&quot; \n        onClick={() =&gt; cancleFollowed(this.list.id, this.followItem)}\n    &gt;\n        取消关注\n    &lt;/Follow&gt; :\n    &lt;Follow \n        className=&quot;btn other&quot;\n        onClick={() =&gt; followCartoon(this.props.list, this.list.id, isLogin)}\n    &gt;\n        关注\n    &lt;/Follow&gt;\n}\n    ----------------------------------------------------------------------\ncheckFollowed(newList, id)  {\n    const arr = [];\n    for(let i = 0; i &lt; newList.length; i ++) {\n        // 集合已关注漫画项id\n        arr.push(newList[i].id)\n    }\n    // 若当前项漫画id存在于id集合中  返回true 显示&apos;取消关注&apos;\n    if(arr.indexOf(id) &gt;= 0) return true;\n}\n</code></pre><p>  <br><br> 点击’取消关注’移除对应漫画项：</p>\n<pre><code>// 派发action，传入当前项漫画id及&apos;已关注&apos;漫画数组\ncancleFollowed(id, list) {\n    dispatch(actionCreators.cancleFollowed(id, list));\n}\n-----------------------------------------------------------------------------\nexport const cancleFollowed = (id, list) =&gt; {\n    return dispatch =&gt; {\n        const arr = [];\n        for (let i = 0; i &lt; list.length;  i++) {\n        // 判断当前项漫画是否存在于&apos;已关注&apos;列表\n        // 若有则移除当前项并将新列表数组派发给reducer\n        // reducer接受新列表数组并更新state，完成漫画取关\n            if (list[i].id !== id) {\n                arr.push(list[i]);\n            }\n        }\n        dispatch(searchFollowed(arr));\n    }\n};\n</code></pre><p><br></p>\n<h4 id=\"关键词搜索功能：\"><a href=\"#关键词搜索功能：\" class=\"headerlink\" title=\"关键词搜索功能：\"></a>关键词搜索功能：</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以通过漫画名及作者来搜索相应漫画（当然都是假数据），页面上显示的漫画我都做了其他的我就没做了哈。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这部分逻辑与’关注/取关’相似，也是通过获取input的value值，用indexOf()方法判断是否存在于关键词列表里(事先写好的假数据，包括作品名和作者)；再dispatch出对应项id，根据id集合对应漫画项信息，然后就可以渲染到界面上。</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/8/30/165899677ef01bd0?w=600&amp;h=257&amp;f=gif&amp;s=3709381\" alt=\"\"><br><br></p>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;写这篇文章的目的就是记录一下我的学习情况，鼓励自己继续往下学，还想要整理一下我的思路（其实挺乱的吧），对这个项目感兴趣的小伙伴可以去查看我的项目地址（贴在下面啦）。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本人前端新手，希望各位小(da)伙(lao)伴多给我一点意见，感谢！<br><br><br>欢迎交流٩(๑❛ᴗ❛๑)۶</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;微信：LYX0_0TXRY</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QQ：295510545<br><br><br><br><b>附上我的项目地址：<a href=\"https://github.com/LestaSan/react-cartoon/tree/master/kuaikan_cartoon\" target=\"_blank\" rel=\"noopener\">Lesta</a></b></p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/6/12/163efcc6d8dca845?w=300&amp;h=300&amp;f=jpeg&amp;s=9113\" alt=\"\"></p>\n","next":{"title":"scroll-view组件bindscroll实例应用：自定义滚动条","slug":"pinduoduo-scroll-view"},"link":"/2018/08/30","toc":[{"title":"详细介绍","id":"详细介绍","index":"1","children":[{"title":"1.&nbsp;&nbsp;技术栈与组件库","id":"1-nbsp-nbsp-技术栈与组件库","index":"1.1"},{"title":"2.&nbsp;&nbsp;目录列表","id":"2-nbsp-nbsp-目录列表","index":"1.2"},{"title":"3.&nbsp;&nbsp;功能介绍","id":"3-nbsp-nbsp-功能介绍","index":"1.3"}]},{"title":"结束语","id":"结束语","index":"2"}]}