{"title":"微信小程序-仿拼多多","date":"2018-08-26T01:22:40.000Z","excerpt":"","slug":"pinduoduo-App","updated":"2018-08-26T01:41:29.025Z","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>购物节又要来啦！！（撒花撒花！）零食打折啦！！衣服打折了！！小伙伴们准备好买买买了吗！！！让我看看我还多少余额哈！（满心期待(*￣︶￣)）<br><br><br>（10秒后……）<br><br>好吧我还是写个电商小程序过过瘾好了。[冷漠脸]<br><br><br>咳咳，让我们进入正题。本人作为一个前端新手，终于完成了一个小项目——电商平台的开发——以此文记录一下我的开发历程，希望在自己总结的同时也能帮助到其他小伙伴。（大家一起加油啦~）</p>\n<h2 id=\"详细介绍\"><a href=\"#详细介绍\" class=\"headerlink\" title=\"详细介绍\"></a>详细介绍</h2><p><br></p>\n<h3 id=\"1、主页\"><a href=\"#1、主页\" class=\"headerlink\" title=\"1、主页\"></a>1、主页</h3><p>话不多说先上动图<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163edb3fc9b24b24?w=312&amp;h=210&amp;f=gif&amp;s=17461\" alt=\"\"><br><br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（！上错了上错了！图在下面在下面！！！看官们千万别弃文！[一本正经脸]）<br><br></p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ee15ccab60d28?w=324&amp;h=648&amp;f=gif&amp;s=2375857\" alt=\"\"><br>主页包括导航栏、轮播图、图标导航（中间那部分不知道应该怎么形容。。）以及底下用wx:for循环的商品列表。</p>\n<ul>\n<li><p>导航栏<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163edd75a4b3911b?w=411&amp;h=35&amp;f=png&amp;s=6503\" alt=\"\"><br>导航栏用的scroll-view组件，设置其水平方向滑动，点击到的字体会变换样式。而且，导航栏点击不同的类别会将主页替换成不同的结构，这就要将最开始的主页结构隐藏起来。我在data中设置 curTag: 0 （默认选中热门类别），点击各个类别会动态改变curTag值；再通过wx:if=”false“的判断来隐藏结构。<br><br><br>代码如下：<br><br><br>  wxml</p>\n<pre><code>&lt;view class=&quot;Block1&quot;&gt;\n  &lt;scroll-view class=&quot;block1&quot; scroll-x=&quot;true&quot;&gt;\n    &lt;view \n      wx:for=&quot;{{tabblock}}&quot; \n      data-id=&quot;{{index}}&quot; \n      class=&quot;blk1tab {{curNav == index? 'selected': ''}}&quot; \n      bindtap=&quot;tabClick&quot;\n    &gt;\n      {{item.name}}\n    &lt;/view&gt;\n    &lt;/scroll-view&gt;\n    &lt;block wx:if=&quot;{{curTag == 1}}&quot;&gt;&lt;include src=&quot;../one/one&quot;/&gt;&lt;/block&gt;\n&lt;/view&gt;\n</code></pre><p>  <br>wxss</p>\n<pre><code>.block1 .blk1tab {\n  display: inline-block;\n  font-size: 22rpx;\n  color: #58595b;\n  margin: auto 14rpx;\n  padding-top: 20rpx;\n  border-bottom: 2rpx solid transparent;\n}\n.block1 .selected {\n  color: red;\n  border-color: red;\n}\n</code></pre><p>  <br>js</p>\n<pre><code>tabClick: function(e) {\n  var id = e.currentTarget.dataset.id;\n  this.setData({\n    curNav: id,\n    curTag: id\n  });\n},\n</code></pre><p>  <br></p>\n</li>\n<li><p>图标导航<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ee2c16b68de03?w=415&amp;h=165&amp;f=png&amp;s=30993\" alt=\"\"><br>  图标来自于<a href=\"http://www.iconfont.cn/\" target=\"_blank\" rel=\"noopener\">iconfont-阿里巴巴矢量图标库</a><br><br><br>  图标导航用的也是scroll-view组件，具体讲一下导航滑动时，下方红线进度条跟进的实现。<br><br>  红线移动即是要动态改变它在水平方向的位置，这是通过scroll-view组件中bindscroll事件实现的；事件触发时可在detail中查询到scrollLeft范围，根据范围再设置红线相应位置即可。<br><br><br>代码如下：<br><br><br>wxml</p>\n<pre><code>&lt;scroll-view class=&quot;scroll-view&quot; scroll-x=&quot;true&quot; bindscroll=&quot;scrollMove&quot;&gt;\n  &lt;view class=&quot;block3_blk&quot;&gt;\n    &lt;block wx:for=&quot;{{blkpic1}}&quot;&gt;\n      &lt;navigator class=&quot;blk3pic&quot;&gt;\n        &lt;image src=&quot;{{item.src}}&quot; class=&quot;blkImage&quot; /&gt;\n          &lt;view class=&quot;blk3title&quot;&gt;{{item.title}}&lt;/view&gt;\n      &lt;/navigator&gt;\n    &lt;/block&gt;\n  &lt;/view&gt;\n  &lt;view class=&quot;block3_blk&quot;&gt;\n    &lt;block wx:for=&quot;{{blkpic2}}&quot;&gt;\n      &lt;navigator class=&quot;blk3pic&quot;&gt;\n        &lt;image src=&quot;{{item.src}}&quot; class=&quot;blkImage&quot; /&gt;\n        &lt;view class=&quot;blk3title&quot;&gt;{{item.title}}&lt;/view&gt;\n      &lt;/navigator&gt;\n    &lt;/block&gt;\n  &lt;/view&gt;\n&lt;/scroll-view&gt;\n&lt;view class=&quot;scroll-line&quot;&gt;\n  &lt;view class=&quot;scrollMove&quot; style=&quot;left:{{viewleft}}rpx&quot;&gt;&lt;/view&gt;\n&lt;/view&gt;\n</code></pre><p>  <br>js</p>\n<pre><code>scrollMove: function(e) {\n  var left = e.detail.scrollLeft;\n  this.setData({\n    viewleft: left\n  })\n},\n</code></pre><p><br></p>\n</li>\n</ul>\n<h3 id=\"2、商品详情页\"><a href=\"#2、商品详情页\" class=\"headerlink\" title=\"2、商品详情页\"></a>2、商品详情页</h3><p><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ee4d388ab20b7?w=270&amp;h=540&amp;f=gif&amp;s=2781344\" alt=\"\"><br><br>详情页有轮播图、弹框和自定义的tabBar；轮播图我就不提了，下面总结下弹框和tabBar的实现。<br></p>\n<ul>\n<li><p>自定义tabBar<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ee58319341b48?w=425&amp;h=67&amp;f=png&amp;s=11605\" alt=\"\"><br>要将tabBar固定在页面底部，只需在样式中将position设为fixed，再设置好left和bottom即可。值得注意的是，此处使用navigator标签跳转到tabBar首页，默认的跳转方式没法实现；需要将navigator的open-type设为switchTab。<br><br><br>wxml如下：</p>\n<pre><code>&lt;navigator\n  class=&quot;tabBar_box tabbox&quot; \n  url=&quot;../index/index&quot; \n  open-type=&quot;switchTab&quot;\n&gt;\n  &lt;image class=&quot;tab_image&quot; src=&quot;../../images/Gshouye.png&quot;&gt;&lt;/image&gt;\n  &lt;view class=&quot;tab_name&quot;&gt;首页&lt;/view&gt;\n&lt;/navigator&gt;\n</code></pre><p>  <br></p>\n</li>\n<li><p>自定义弹框<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ee55d9d8dcddb?w=1080&amp;h=2060&amp;f=png&amp;s=952678\" alt=\"\"><br>  弹框这部分是两个结构，前面的信息面和后面透明的蒙层。弹框也是用fixed固定住，它的弹出效果可调用小程序api中的wx.createAnimation来实现。弹框弹出后，点击蒙层可以退出弹框；而在这里我还做了一个小细节：弹出后详情页不可滚动。<br><br><br>  贴上代码：<br><br><br>  wxml</p>\n<pre><code>&lt;view \n  class=&quot;block_back&quot; \n  wx:if=&quot;{{block3click}}&quot; \n  bindtap=&quot;hideModal&quot;&gt;\n&lt;/view&gt;\n&lt;view \n  class=&quot;block3_out&quot; \n  wx:if=&quot;{{block3click}}&quot; \n  animation=&quot;{{animationData}}&quot;\n&gt;\n  &lt;view class=&quot;blk_out_title&quot;&gt;服务说明&lt;/view&gt;\n  &lt;view class=&quot;blk_out_list&quot;&gt;\n    &lt;view class=&quot;list_item&quot; wx:for=&quot;{{lists}}&quot;&gt;\n      &lt;view&gt;\n        &lt;image src=&quot;{{item.src}}&quot;&gt;&lt;/image&gt;\n      &lt;/view&gt;\n        &lt;view class=&quot;list&quot;&gt;\n          &lt;text class=&quot;list_title&quot;&gt;{{item.title}}&lt;/text&gt;\n          &lt;text class=&quot;list_cnt&quot;&gt;{{item.content}}&lt;/text&gt;\n        &lt;/view&gt;\n      &lt;/view&gt;\n  &lt;/view&gt;\n&lt;/view&gt;\n</code></pre><p>  js</p>\n<pre><code>serverContent: function(e) {\n  var that = this;\n  var animation  = wx.createAnimation({\n    // 动画持续时间\n    duration:200,\n    // 动画效果\n    timingFunction:&apos;linear&apos;\n  });\n  that.animation = animation\n  //在y轴偏移\n  animation.translateY(400).step()\n  // 让弹框出现\n  that.setData({\n    block3click: true,\n    blockclick: true,\n    animationData: animation.export()\n  });\n  setTimeout(function(){\n    animation.translateY(0).step()\n    that.setData({\n      animationData: animation.export()\n    })\n  },100)\n},\n//隐藏弹框\nhideModal: function() {\n  this.setData({\n    block3click: false,\n    blockclick: false\n  })\n}\n</code></pre><p>  弹框出现禁止详情页滚动，即blockclick为true时设置overflow为hidden。<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ee73e690dee56?w=692&amp;h=33&amp;f=png&amp;s=7804\" alt=\"\"><br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ee7c73ada65a7?w=303&amp;h=85&amp;f=png&amp;s=4973\" alt=\"\"></p>\n<h3 id=\"3、选择和支付页面\"><a href=\"#3、选择和支付页面\" class=\"headerlink\" title=\"3、选择和支付页面\"></a>3、选择和支付页面</h3><p><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ee83651bb602d?w=270&amp;h=540&amp;f=gif&amp;s=1077949\" alt=\"\"><br>选择和支付页面存在许多数据交互，比如不同货号对应不同商品图；两个页面中的数据会相互影响，这里我还踩了几个小坑（踩坑有益进步┓( ´∀` )┏）让我慢慢总结。。。<br><br></p>\n</li>\n<li><p>未选择提示<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ee87ad25b4126?w=1080&amp;h=2060&amp;f=png&amp;s=791473\" alt=\"\"><br>这里没有选择货号就会出现上图的弹框，仍然是true or false的设置；没啥好讲哒，直接上代码啦。<br><br><br>wxml</p>\n<pre><code>&lt;view class=&quot;confirm&quot; bindtap=&quot;purchaseClick&quot;&gt;确定&lt;/view&gt;\n&lt;view \n  class=&quot;confirmOut&quot; wx:if=&quot;{{showOut}}&quot; \n  animation=&quot;{{animationData}}&quot;\n&gt;\n  请选择货号\n&lt;/view&gt;\n</code></pre><p>  <br>js</p>\n<pre><code>  purchaseClick: function() {\n    //获取当前选中的货号\n    var a = this.data.curNav;\n    var that = this;\n    //判断是否选中 为空则显示弹框\n    if (a == null) {\n      that.setData({\n        howOut: true\n      }) \n    } else {\n       wx.navigateTo({\n        url: &apos;../pay/pay&apos;,\n      })\n    };\n    var animation  = wx.createAnimation();\n    //延时后隐藏弹框\n    setTimeout(function(){\n      that.setData({\n        animationData: animation.export(),\n        showOut: false\n      })\n    },1500)\n}\n</code></pre><p><br></p>\n</li>\n<li><p>选择页和支付页的数据交互<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ef32b10988104?w=270&amp;h=540&amp;f=gif&amp;s=1077949\" alt=\"\"><br>  首先是选择页的数据更新，此处都是通过wx:for循环数组来添加信息。<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ef49f1ac9c842?w=1080&amp;h=2060&amp;f=png&amp;s=774113\" alt=\"\"><br>头部的数组中只有一条元素，包括了图片、价格和货号信息，当选择了不同的货号后，就更替头部数组中的元素；请见代码：<br><br></p>\n<p>  头部wxml:</p>\n<pre><code>&lt;view class=&quot;pur_hd&quot; wx:for=&quot;{{purContent}}&quot;&gt;\n  &lt;view class=&quot;tabBox pur_pic&quot;&gt;\n    &lt;image class=&quot;goodspic&quot; src=&quot;{{item.src}}&quot;&gt;&lt;/image&gt;\n  &lt;/view&gt;\n  &lt;view class=&quot;tabBox&quot;&gt;\n    &lt;view class=&quot;price&quot;&gt;￥{{item.price}}&lt;/view&gt;\n    &lt;view class=&quot;content&quot;&gt;{{item.title}}&lt;/view&gt;\n  &lt;/view&gt;\n&lt;/view&gt;\n</code></pre><p>  头部js:</p>\n<pre><code>//data中\npurContent: [\n  {\n    src: &quot;//t00img.yangkeduo.com/t05img/images/2018-06-04/e5162f6d8e3ee7bc5620ae4f7c9c4a42.jpeg&quot;,\n    price: &quot;9.9-27.9&quot;,\n    title: &quot;请选择\\xa0\\xa0货号&quot;\n  }\n]\n</code></pre><p>  货号部分wxml:</p>\n<pre><code>&lt;view class=&quot;pur_bd&quot;&gt;\n  &lt;view class=&quot;text&quot;&gt;货号&lt;/view&gt;\n  &lt;view \n    class=&quot;modalLists \n    {{curNav == index? 'selected' : ''}}&quot; \n    bindtap=&quot;selected&quot; wx:for=&quot;{{modalLists}}&quot; d\n    ata-index=&quot;{{index}}&quot; \n  &gt;\n    {{item.content}}\n  &lt;/view&gt;\n&lt;/view&gt;\n</code></pre><p>  js</p>\n<p>   //data中</p>\n<pre><code>modalLists: [\n  { \n    src: &quot;//t03img.yangkeduo.com/images/2018-04-17/9b022a30f3a9f10b437a1e19defb20fb.jpeg&quot;,\n    content:&quot;蓝色经典18包&quot; ,\n    price: &quot;20.26&quot;,\n    title: &quot;已选：蓝色经典18包&quot;\n  },\n  { \n    src: &quot;//t09img.yangkeduo.com/images/2018-04-17/1225b00e178d9042841170ca70e926b8.jpeg&quot;,\n    content:&quot;蓝色经典27包&quot; ,\n    price: &quot;27.9&quot;,\n    title: &quot;已选：蓝色经典27包&quot;\n  },\n  { \n    src: &quot;//t07img.yangkeduo.com/images/2018-04-17/bcbca6f465fa5e2c1a5628ec10d69089.jpeg&quot;,\n    content:&quot;蓝色经典8包&quot; ,\n    price: &quot;10.9&quot;,\n    title: &quot;已选：蓝色经典8包&quot;\n  },\n]\n\n  ......\n\n  selected: function(e) {\n    //获取当前点中的货号\n    var index = e.currentTarget.dataset.index;\n    //声明一个空数组\n    var list = new Array;\n    //将当前点中的货号数组元素添加到list数组中\n    list[0] = this.data.modalLists[index];\n    //更替头部purContent数组中元素\n    this.setData({\n      curNav: index,\n      purContent: list,\n    });\n    //本地存储，为支付页传数据\n    wx.setStorage({\n      key: &apos;list&apos;,\n      data: list[0]\n    })\n  }\n</code></pre><p>  选择页完成后，其数据要传递给支付页，包括商品图、数量、价格和货号，同时支付页要统计商品总价。数据的传递我是通过本地存储完成的。将选择页的数据通过wx:setStorage进行存储，再在支付页用wx:getStorage获取数据，通过setData就可以将数据显示出来了。<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ef8375bc72eff?w=1524&amp;h=747&amp;f=png&amp;s=195579\" alt=\"\"><br><img src=\"https://user-gold-cdn.xitu.io/2018/6/11/163ef84cf7fd3364?w=423&amp;h=752&amp;f=png&amp;s=64364\" alt=\"\"><br>  代码：<br><br><br>  wxml</p>\n<pre><code>&lt;view class=&quot;block3&quot;&gt;\n  &lt;view class=&quot;block3_box&quot;&gt;\n    &lt;image src=&quot;{{src}}&quot;&gt;&lt;/image&gt;\n  &lt;/view&gt;\n  &lt;view class=&quot;box block3_box&quot;&gt;\n    &lt;view class=&quot;box content&quot;&gt;\n      27包18包8包 植护原木抽纸300张整箱批发家庭装3层抽去式面巾纸\n    &lt;/view&gt;\n    &lt;view class=&quot;box modal&quot;&gt;货号：{{modal}}&lt;/view&gt;\n    &lt;view class=&quot;box price&quot;&gt;￥{{price}}/件&lt;/view&gt;\n  &lt;/view&gt;\n&lt;/view&gt;\n\n&lt;view class=&quot;block5&quot;&gt;\n  &lt;view class=&quot;block5_box box1&quot;&gt;\n    &lt;text class=&quot;content1&quot;&gt;实付款：&lt;/text&gt;\n    &lt;text class=&quot;content2&quot;&gt;￥{{total}}&lt;/text&gt;\n    &lt;text class=&quot;content3&quot;&gt;免运费&lt;/text&gt;\n  &lt;/view&gt;\n  &lt;view class=&quot;block5_box box2&quot; &gt;\n    &lt;text&gt;立即支付&lt;/text&gt;\n  &lt;/view&gt;\n&lt;/view&gt;\n</code></pre><p>  <br>js</p>\n<pre><code>data: {\n  modal: &apos;&apos;,\n  price: &apos;&apos;,\n  number: &apos;&apos;,\n  src: &apos;&apos;,\n  total: &apos;&apos;\n},\n//计算总价\ntotal: function() {\n  var that = this;\n  var number = that.data.number,\n  var price = that.data.price;\n  //.toFixed()保留几位小数\n  var total = (number * price).toFixed(1);\n  //显示数据\n  that.setData({\n    total: total\n  })\n}\n\n......\n\n//获取本地存储中数据\nvar that = this;\nwx.getStorage({\n  key: &apos;list&apos;,\n  success: function(res){\n    var modal = res.data.content;\n    var price = res.data.price;\n    var src = res.data.src;\n    //更新数据\n    that.setData({\n       modal: modal,\n      price: price,\n      src: src\n    });\n    //第一次加载时计算一下总价\n    that.total()\n  }\n})\n</code></pre><p>  这里我加了一个.toFixed()方法，因为没加时数量变化会让小数精确度不一（好吧强迫症犯了，我觉得加了就好看多了hhhhh）。<br><br></p>\n</li>\n<li><p>数量加减<br><br><br>商品数量变化是双向的，在选择页的加减要更新到支付页，而在支付页改变数量后也要更新到选择页，这个效果的实现同样通过本地存储。<br><br><br>wxml</p>\n<pre><code>&lt;view class=&quot;stepper&quot;&gt;\n  &lt;!-- 减号 --&gt;\n  &lt;view class=&quot;normal&quot; data-index=&quot;{{index}}&quot; bindtap=&quot;bindMinus&quot;&gt;-&lt;/view&gt;\n  &lt;!-- 数量 --&gt;\n  &lt;view class=&quot;number&quot;&gt;{{number}}&lt;/view&gt;\n  &lt;!-- 加号 --&gt;\n  &lt;view class=&quot;normal&quot; data-index=&quot;{{index}}&quot; bindtap=&quot;bindPlus&quot;&gt;+&lt;/view&gt;\n&lt;/view&gt;\n</code></pre><p>  <br>js</p>\n<pre><code>//减法 \nbindMinus: function() {\n  // 字符串转数字类\n  var num = parseInt(this.data.number);\n  var that = this;\n  if (num &gt; 1) {\n    num = num - 1;\n    that.setData({  \n      number: num\n    })\n  };\n  //存储一下\n  wx.setStorage({\n    key: &apos;number&apos;,\n    data: num\n  })\n}\n\n//通过onShow获取本地存储，每次页面显示时都能更新数据\nonShow: function (options) {\n  var that = this;\n  wx.getStorage({\n    key: &apos;number&apos;,\n    success: function(res){\n      var number = res.data;\n      that.setData({\n        number: number\n      })\n    },\n  })\n}\n</code></pre><p>  出于严谨性，调动一下parseInt()方法，它可将字符串类型转换成数字类型。<br><br><br>  注意，选择页在每次加载前都应清空本地存储，不然可能存在加载完成后页面上显示的是上一次调试的数据；因此，可在onLoad中调用wx.clearStorage()。</p>\n<pre><code>onLoad: function (options) {\n  wx.clearStorage({\n    key: &apos;number&apos;,\n    key: &apos;list&apos;\n  })\n}\n</code></pre><p>  <br></p>\n<h3 id=\"4、setInterval的使用\"><a href=\"#4、setInterval的使用\" class=\"headerlink\" title=\"4、setInterval的使用\"></a>4、setInterval的使用</h3><p>一直觉得拼多多的拼团提示很好玩，所以最后忍不住去首页弄一个类似的拼团模块，然后效果嘛。。。总感觉哪里怪怪的？?……<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/12/163efb5ffe7e8f9f?w=360&amp;h=720&amp;f=gif&amp;s=3601263\" alt=\"\"><br>其实也是不停地设置true or false来控制模块的显示与否，通过setInterval()来定时，每隔一定时间就对相应值取反，这样就能看到模块闪烁的效果了。<br><br><br>wxml</p>\n<pre><code>&lt;view class=&quot;invite_container&quot; wx:if=&quot;{{show}}&quot;&gt;\n  &lt;navigator class=&quot;invitation&quot; \n    animation=&quot;{{animationData}}&quot; \n    url=&quot;../invitation/invitation&quot;\n  &gt;\n    &lt;view class=&quot;invite invite_pic&quot;&gt;\n      &lt;image src=&quot;../../images/touxiang.png&quot;&gt;&lt;/image&gt;\n    &lt;/view&gt;\n      &lt;view class=&quot;invite invite_content&quot;&gt;\n        Lesta邀请您一起剁手\n      &lt;/view&gt;\n    &lt;/navigator&gt;\n&lt;/view&gt;\n</code></pre></li>\n</ul>\n<p>js</p>\n<pre><code>onLoad: function() {\n  var that = this;\n  var animation = wx.createAnimation();\n  setInterval(function () {\n    var show = !that.data.show;\n    that.setData({\n      animationData: animation.export(),\n        show: show\n    })\n  }, 1500)\n}\n</code></pre><p>什么？你说你想一起剁手嘛？？<br><br><br>零食拼不拼？？衣服拼不拼？水果拼不拼？<br><br><br>好吧你点进去吧….<br><img src=\"https://user-gold-cdn.xitu.io/2018/6/12/163efbe77a65a505?w=1080&amp;h=2060&amp;f=png&amp;s=224910\" alt=\"\"></p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>学习永不停歇。作为一个小白，我还有很长的路要去走，还有好多的坑要去跳，那么就在跌跌撞撞中提升吧~感谢各位小（da）伙（lao）伴将我这篇冗长文章看到最后，有哪里不足还请各位小（da）伙（lao）伴多多指教和提点。感谢！<br><br><br><br><b>附上我的项目地址：<a href=\"https://github.com/LestaSan/wxapp\" target=\"_blank\" rel=\"noopener\">Lesta</a></b></p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/6/12/163efcc6d8dca845?w=300&amp;h=300&amp;f=jpeg&amp;s=9113\" alt=\"\"></p>\n","prev":{"title":"scroll-view组件bindscroll实例应用：自定义滚动条","slug":"pinduoduo-scroll-view"},"link":"/2018/08/26","toc":[{"title":"前言","id":"前言","index":"1"},{"title":"详细介绍","id":"详细介绍","index":"2","children":[{"title":"1、主页","id":"1、主页","index":"2.1"},{"title":"2、商品详情页","id":"2、商品详情页","index":"2.2"},{"title":"3、选择和支付页面","id":"3、选择和支付页面","index":"2.3"},{"title":"4、setInterval的使用","id":"4、setInterval的使用","index":"2.4"},{"title":"结束语","id":"结束语","index":"2.5"}]}]}